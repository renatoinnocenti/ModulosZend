<?
######################################################################
## CLASSE PARA MANIPULAÇÃO DE ARQUIVOS                              ##
## CLASS.MYSQL.PHP VERSÃO 2.0  - 08/12/2006                         ##
## CRIADO POR ART-2 => RENATO INNOCENTI                             ##
## EMAIL: r.innocenti@uol.com.br                                    ##
######################################################################
error_reporting(E_ALL & ~ E_NOTICE);
######################################################################
## CRIA INSTANCIA PARA MANIPULAÇÃO DE ARQUIVOS                      ##
## AS ENTRADAS SÃO REFERENTES A CAMINHOS E ARQUIVOS                 ##
## Classe: Arquivo                                                  ##
######################################################################
class Arquivo {
 	var $origem;
	##################################################################
    ## Seta o caminho de destino de um arquivo                      ##
    ## Arquivo($origem)                                             ##
    ## $origem = path do arquivo/diretorio a ser manipulado         ##
    ## ie. ./teste/teste                                            ##
    ##################################################################
    function Arquivo($origem){
		$this->origem = $this->ChangePath(realpath($origem));
	}	
	####################################################################
    ## Abre um diretorio seguro                                       ##
    ## NewDir($dirname,$chmod);                                       ##
    ## $dirname = Nome do Diretorio a ser aberto                      ##
    ## $chmod = premiss?o da pasta a ser criada                       ##
    ####################################################################
    function NewDir($dirname,$chmod=0775){
        if(!is_dir($dirname))
            @mkdir($dirname, $chmod);
    }
    #######################################################
    ## Seta o caminho de destino de um arquivo           ##
    ## SetDestino($destino)                              ##
    ## $destino = path do destino do arquivo             ##
    ## ie. ./teste/teste                                 ##
    #######################################################
    function SetDestino($destino){
        $this->destino = (is_dir($destino))?$this->ChangePath(realpath($destino)):$this->Gera_dir($destino);
    }
    #######################################################
    ## Seta o caminho de destino de um arquivo           ##
    ## SetDestino($destino)                              ##
    ## $destino = path do destino do arquivo             ##
    ## ie. ./teste/teste                                 ##
    #######################################################
    function SetOrigem($origem){
        $this->origem = $this->ChangePath(realpath($origem));
    }
    ####################################################################
    ## Remove todos os arquivos de uma pasta  de acordo com um tipo   ##
    ## DelFiles($str[*.*])                                            ##
    ## $str = Patch com o nome do arquivo (aceita variaveis do DOS)   ##
    ## Retorna o true quando deletar tudo                             ##
    ####################################################################
    function DelFiles($str,$all='/*'){
        foreach(glob($str.$all) as $fn){
            if(is_dir($fn)){
                $this->DelFiles($fn); 
                @rmdir($fn);
            }else{
              @unlink($fn);
            }
        }
            @rmdir($str);
            clearstatcache();
    }   
    ####################################################################
    ## COPIA TODOS OS ARQUIVOS E PASTAS PARA O DESTINO                ##
    ## CopyAllFiles($origem,$destino)                                 ##
    ## $origem = patch completo caminho para o arquivo de origem      ##
    ## $destino = patch completo caminho para o arquivo de destino    ##
    ####################################################################
    function CopyAllFiles($origem,$destino,$all='/*'){
        $fn = @glob($origem.$all);
        if(is_array($fn)){
            foreach( $fn as $pasta_interna){
                if(is_dir($pasta_interna)){
                    $pasta_atual = str_replace($origem, '', $pasta_interna);
                    $pasta_destino = $destino.$pasta_atual;
                    $this->NewDir($pasta_destino,0775);
                    $this->CopyAllFiles($pasta_interna,$pasta_destino);
                }else{
                    @copy($pasta_interna,$destino.'/'.str_replace($origem, '', $pasta_interna));
                    $this->aa[]=$destino.'/'.str_replace($origem, '', $pasta_interna);
                }    
            }
        }        
    }
    ####################################################################
    ## GERA PASTAS APARTIR DE UM PATCH DE DESTINO                     ##
    ## Gera_dir($destino,$close)                                      ##
    ## $destino = patch completo caminho para o arquivo de destino    ##
    ## $close = int Chmod para fechar a pasta                         ##
    ####################################################################
    function Gera_dir($destino,$close=0775){
        $paths = explode('/',$destino);
        $dire = $this->ChangePath(realpath($paths[0]));
        for($x=1;$x<count($paths);$x++){
            if($paths[$x]== '.' || $paths[$x]== '..')continue;
            $dire .= '/';
            @chmod($dire,0777);
            $fecha = $dire;
            $dire .= $paths[$x];
            $this->NewDir($dire,$close);
            @chmod($fecha,$close);
        }
        return $dire;
    }
    ##################################################################
    ## Arruma as Barras para windows                                ##
    ## ChangePath($p_path, $p_remove)                               ##
    ## $p_path = path com o endere?o a ser mudado                   ##
    ## $p_remove  = remover a Letra do windows                      ##
    ##################################################################
    function ChangePath($p_path, $p_remove=true){
        if (stristr(php_uname(), 'windows')) {
            if (($p_remove) && (($v_position = strpos($p_path, ':')) != false)) {
                $p_path = substr($p_path, $v_position+1);
            }
            if ((strpos($p_path, '\\') > 0) || (substr($p_path, 0,1) == '\\')) {
                $p_path = strtr($p_path, '\\', '/');
            }
        }
        return $p_path;
    }
    ##################################################################
    ## RETORNA OS NOMES DOS ARQUIVOS E PASTAS                       ##
    ## loadContent($type, $all)                                     ##
    ## $type = file|dir|all tipo de itens a serem listados          ##
    ## $all  = condições de tipo a ser listado (DOS)                ##
    ##################################################################	
	function loadContent($type='file',$all='/*'){
        Switch($type){
            case 'file':
                foreach(glob($this->origem.$all) as $files){
                    if(!is_dir($files))
                        $out[] = $files;
                }
                return $out;
                break;
            case 'dir':
                return glob($this->origem.$all, GLOB_ONLYDIR);
                break;
            case 'all':
                return glob($this->origem.$all);
                break;
            default:
                return glob($this->origem.$all, GLOB_ONLYDIR);                
        }
	}
	
	function loadFileContents(){
	 	preg_match_all('/([a-zA-Z0-9_]+)[ ]*? =[ ]*? \'(.+)(\'\r|\'\n|\'\r\n|\'$)/siU',file_get_contents($this->origem), $q);
	 	return $q;
	}
	
	function geraLngFile($q) {
		if (!file_exists($this->origem)) $arq = fopen($this->origem,"x+");
 		else {
			return false;
			break;
			 }	 	
 	
 	foreach ($q as $i=>$value) {
 	 
		fwrite($arq, $i." = '".$value."' \n");
	}	 

	 return $this->origem;
	}
}

?>